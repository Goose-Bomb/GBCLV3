<Window
    x:Class="GBCLV3.Views.Windows.AccountEditView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:adonisUI="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:auth="clr-namespace:GBCLV3.Models.Authentication"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:util="clr-namespace:GBCLV3.Utils"
    Title="{Binding Type}"
    Width="660"
    Height="288"
    FontFamily="{Binding ThemeService.FontFamily, Mode=OneWay}"
    FontWeight="{Binding ThemeService.FontWeight, Mode=OneWay}"
    Loaded="{s:Action OnWindowLoaded}"
    ResizeMode="NoResize"
    Style="{StaticResource UniversalWindowStyle}"
    Topmost="True">

    <Window.Resources>
        <Style
            x:Key="DescriptionBoxStyle"
            BasedOn="{StaticResource {x:Type TextBlock}}"
            TargetType="TextBlock">
            <Setter Property="Margin" Value="16,8,16,0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="14" />
        </Style>

        <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox">
            <Setter Property="Margin" Value="0,8,0,0" />
            <Setter Property="Height" Value="32" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static adonisUI:Brushes.AccentBrush}}" />
            <Setter Property="InputMethod.IsInputMethodEnabled" Value="False" />
            <Setter Property="FontSize" Value="14" />
        </Style>

        <Style BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="ComboBox">
            <Setter Property="Margin" Value="0,8,0,0" />
            <Setter Property="Height" Value="32" />
            <Setter Property="FontSize" Value="14" />
        </Style>

        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
            <Setter Property="Margin" Value="8,0,0,8" />
            <Setter Property="Width" Value="96" />
            <Setter Property="FontSize" Value="14" />
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="36" />
        </Grid.RowDefinitions>

        <GroupBox Grid.Row="0" Margin="8">

            <GroupBox.Header>
                <StackPanel Orientation="Horizontal">
                    <ContentControl
                        Width="16"
                        Height="16"
                        Margin="0,0,8,0"
                        VerticalContentAlignment="Center"
                        ContentTemplate="{DynamicResource {x:Static adonisUI:Templates.LoadingCircle}}"
                        SnapsToDevicePixels="False"
                        Visibility="{Binding IsLoading, Mode=OneWay, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />

                    <TextBlock Text="{Binding Status, Mode=OneWay}" Visibility="{Binding HasAuthError, Mode=OneWay, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}" />

                    <TextBlock
                        Margin="4,0"
                        Foreground="DarkRed"
                        Text="{Binding AuthErrorType, Mode=OneWay}"
                        Visibility="{Binding HasAuthError, Mode=OneWay, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />


                    <TextBlock
                        MaxWidth="528"
                        Margin="4,0"
                        Foreground="{DynamicResource {x:Static adonisUI:Brushes.DisabledForegroundBrush}}"
                        Text="{Binding AuthErrorMessage, Mode=OneWay}"
                        TextTrimming="CharacterEllipsis"
                        Visibility="{Binding HasAuthError, Mode=OneWay, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />
                </StackPanel>
            </GroupBox.Header>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="40" />
                    <RowDefinition Height="40" />
                    <RowDefinition Height="40" />
                    <RowDefinition Height="8" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="160" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    Grid.Row="0"
                    Grid.Column="0"
                    Style="{StaticResource DescriptionBoxStyle}"
                    Text="{DynamicResource AuthMode}" />

                <ComboBox
                    Grid.Row="0"
                    Grid.Column="1"
                    ItemsSource="{util:EnumBindingSource {x:Type auth:AuthMode}}"
                    SelectedItem="{Binding AuthMode, Mode=TwoWay}" />

                <TextBlock
                    Grid.Row="1"
                    Grid.Column="0"
                    Style="{StaticResource DescriptionBoxStyle}"
                    Text="{DynamicResource Username}"
                    Visibility="{Binding IsOfflineMode, Mode=OneWay, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />

                <TextBlock
                    Grid.Row="1"
                    Grid.Column="0"
                    Style="{StaticResource DescriptionBoxStyle}"
                    Text="{DynamicResource Email}"
                    Visibility="{Binding IsOfflineMode, Mode=OneWay, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}" />

                <TextBox
                    Grid.Row="1"
                    Grid.Column="1"
                    InputMethod.IsInputMethodEnabled="True"
                    Text="{Binding Username, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Visibility="{Binding IsOfflineMode, Mode=OneWay, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />

                <TextBox
                    Grid.Row="1"
                    Grid.Column="1"
                    Text="{Binding Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Visibility="{Binding IsOfflineMode, Mode=OneWay, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}" />

                <TextBlock
                    Grid.Row="2"
                    Grid.Column="0"
                    Style="{StaticResource DescriptionBoxStyle}"
                    Text="{DynamicResource Password}"
                    Visibility="{Binding IsOfflineMode, Mode=OneWay, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}" />

                <PasswordBox
                    Grid.Row="2"
                    Grid.Column="1"
                    Height="32"
                    Margin="0,8,0,0"
                    FontSize="12"
                    PasswordChanged="{s:Action OnPasswordChanged}"
                    SelectionBrush="{DynamicResource {x:Static adonisUI:Brushes.AccentBrush}}"
                    Visibility="{Binding IsOfflineMode, Mode=OneWay, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}" />

                <TextBlock
                    Grid.Row="3"
                    Grid.Column="0"
                    Style="{StaticResource DescriptionBoxStyle}"
                    Text="{DynamicResource AuthServer}"
                    Visibility="{Binding IsExternalMode, Mode=OneWay, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />

                <TextBox
                    Grid.Row="3"
                    Grid.Column="1"
                    Text="{Binding AuthServerBase, Mode=TwoWay}"
                    Visibility="{Binding IsExternalMode, Mode=OneWay, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />

                <StackPanel
                    Grid.Row="0"
                    Grid.RowSpan="4"
                    Grid.Column="2">
                    <Image
                        Width="96"
                        Height="96"
                        Margin="0,16,0,8"
                        HorizontalAlignment="Center"
                        RenderOptions.BitmapScalingMode="NearestNeighbor"
                        Source="{Binding CurrentAccount.Avatar}">
                        <Image.Effect>
                            <DropShadowEffect BlurRadius="8" ShadowDepth="0" />
                        </Image.Effect>
                    </Image>

                    <TextBlock
                        MaxWidth="140"
                        MaxHeight="40"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="14"
                        FontWeight="Bold"
                        Foreground="{DynamicResource {x:Static adonisUI:Brushes.AccentBrush}}"
                        Text="{Binding Username, Mode=OneWay, ValidatesOnNotifyDataErrors=False}"
                        TextWrapping="Wrap" />
                </StackPanel>
            </Grid>

        </GroupBox>


        <StackPanel
            Grid.Row="1"
            FlowDirection="RightToLeft"
            Orientation="Horizontal">

            <Button Click="{s:Action Cancel}" Content="{DynamicResource Cancel}" />

            <Button
                Click="{s:Action Confirm}"
                Content="{DynamicResource OK}"
                IsEnabled="{Binding CanConfirm, Mode=OneWay}" />

        </StackPanel>

    </Grid>

</Window>