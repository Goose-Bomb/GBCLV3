<Window x:Class="GBCLV3.Views.Windows.AddAccountView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:s="https://github.com/canton7/Stylet"
        xmlns:adonisUI="clr-namespace:AdonisUI;assembly=AdonisUI"
        xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
        xmlns:util="clr-namespace:GBCLV3.Utils"
        xmlns:auth="clr-namespace:GBCLV3.Models.Authentication"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        ResizeMode="NoResize"
        UseLayoutRounding="True"
        Topmost="True"
        Background="#80333333"
        FontFamily="{Binding ThemeService.FontFamily, Mode=OneWay}"
        FontWeight="{Binding ThemeService.FontWeight, Mode=OneWay}"
        Style="{StaticResource UniversalWindowStyle}"
        Title="{DynamicResource AddAccount}"
        Width="640" Height="240">

    <Window.Resources>
        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="Margin" Value="16,8,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Margin" Value="0,8,0,0"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static adonisUI:Brushes.AccentBrush}}"/>
            <Setter Property="InputMethod.IsInputMethodEnabled" Value="False"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Margin" Value="0,8,0,0"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Margin" Value="8,0,0,8"/>
            <Setter Property="Padding" Value="16,0"/>
            <Setter Property="Width" Value="72"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="32"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="8">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="8"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="172"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="160"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0"
                   Text="{DynamicResource AuthMode}"/>

            <ComboBox Grid.Row="0" Grid.Column="1"
                   ItemsSource="{util:EnumBindingSource {x:Type auth:AuthMode}}"
                   SelectedItem="{Binding AuthMode, Mode=TwoWay}"/>

            <TextBlock Grid.Row="1" Grid.Column="0"
                   Text="{DynamicResource Username}"
                   Visibility="{Binding IsOfflineMode, Mode=OneWay,
                                Converter={x:Static s:BoolToVisibilityConverter.Instance}}"/>

            <TextBlock Grid.Row="1" Grid.Column="0"
                   Text="{DynamicResource Email}"
                   Visibility="{Binding IsOfflineMode, Mode=OneWay,
                                Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}"/>

            <TextBox Grid.Row="1" Grid.Column="1"
                 Text="{Binding Username, Mode=TwoWay}"
                 Visibility="{Binding IsOfflineMode, Mode=OneWay,
                                        Converter={x:Static s:BoolToVisibilityConverter.Instance}}"/>

            <TextBox Grid.Row="1" Grid.Column="1"
                 Text="{Binding Email, Mode=TwoWay}"
                 Visibility="{Binding IsOfflineMode, Mode=OneWay,
                                        Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}"/>


            <TextBlock Grid.Row="2" Grid.Column="0"
                   Text="{DynamicResource Password}"
                   Visibility="{Binding IsOfflineMode, Mode=OneWay,
                                Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}"/>

            <PasswordBox Grid.Row="2" Grid.Column="1" Margin="0,8,0,0"
                     Height="32" FontSize="12"
                     SelectionBrush="{DynamicResource {x:Static adonisUI:Brushes.AccentBrush}}"
                     PasswordChanged="{s:Action OnPasswordChanged}"
                     Visibility="{Binding IsOfflineMode, Mode=OneWay,
                            Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}"/>

            <TextBlock Grid.Row="3" Grid.Column="0"
                   Text="{DynamicResource AuthServer}"
                   Visibility="{Binding IsExternalMode, Mode=OneWay,
                                Converter={x:Static s:BoolToVisibilityConverter.Instance}}"/>

            <TextBox Grid.Row="3" Grid.Column="1"
                 Text="{Binding AuthServerBase, Mode=TwoWay}"
                 Visibility="{Binding IsExternalMode, Mode=OneWay,
                              Converter={x:Static s:BoolToVisibilityConverter.Instance}}"/>


        </Grid>
        
        <StackPanel Grid.Row="1" Height="32"
                    Orientation="Horizontal" FlowDirection="RightToLeft">

            <Button Content="{DynamicResource Cancel}"
                    Click="{s:Action Cancel}"/>

            <Button Content="{DynamicResource OK}"
                    IsEnabled="{Binding CanConfirm, Mode=OneWay}"
                    Click="{s:Action Confirm}"/>

        </StackPanel>
        
    </Grid>
    
</Window>
